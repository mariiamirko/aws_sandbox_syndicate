{
  "openapi": "3.0.1",
  "info": {
    "title": "task11_api",
    "version": "2024-06-24T17:58:06Z"
  },
  "servers": [
    {
      "url": "https://gccgz4zlfl.execute-api.eu-central-1.amazonaws.com/{basePath}",
      "variables": {
        "basePath": {
          "default": "api"
        }
      }
    }
  ],
  "paths": {
    "/reservations": {
      "get": {
        "description": "Gets reservations info",
        "summary": "Get all information about all reservations",
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReservationsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match"
        }
      },
      "post": {
        "description": "Creates a new reservation",
        "summary": "Create a reservation",
        "requestBody": {
          "description": "Creates new reservation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Reservation"
              }
            }
          },
          "responses": {
            "200": {
              "description": "200 response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostReservationsResponse"
                  }
                }
              }
            }
          },
          "security": [
            {
              "authorizer": []
            }
          ],
          "x-amazon-apigateway-integration": {
            "type": "aws_proxy",
            "httpMethod": "POST",
            "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
            "responses": {
              "default": {
                "statusCode": "200"
              }
            },
            "passthroughBehavior": "when_no_match"
          }
        }
      }
    },
    "/tables": {
      "get": {
        "description": "Gets tables info",
        "summary": "Get all information about all tables",
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTablesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match"
        }
      },
      "post": {
        "description": "Create new tables",
        "summary": "Creates new tables",
        "requestBody": {
          "description": "Creates new tables",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Table"
              }
            }
          },
          "responses": {
            "200": {
              "description": "200 response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostTablesResponse"
                  }
                }
              }
            }
          },
          "security": [
            {
              "authorizer": []
            }
          ],
          "x-amazon-apigateway-integration": {
            "type": "aws_proxy",
            "httpMethod": "POST",
            "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
            "responses": {
              "default": {
                "statusCode": "200"
              }
            },
            "passthroughBehavior": "when_no_match"
          }
        }
      }
    },
    "/signin": {
      "post": {
        "description": "Sign in",
        "summary": "Sign user in with email and password",
        "requestBody": {
          "description": "Sign in",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "responses": {
            "200": {
              "description": "200 response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SignInResponse"
                  }
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "type": "aws_proxy",
            "httpMethod": "POST",
            "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
            "responses": {
              "default": {
                "statusCode": "200"
              }
            },
            "passthroughBehavior": "when_no_match"
          }
        }
      }
    },
    "/signup": {
      "post": {
        "description": "Sign up",
        "summary": "Sign user up with email and password",
        "requestBody": {
          "description": "Sign up",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "responses": {
            "200": {
              "description": "200 response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "type": "aws_proxy",
            "httpMethod": "POST",
            "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
            "responses": {
              "default": {
                "statusCode": "200"
              }
            },
            "passthroughBehavior": "when_no_match"
          }
        }
      }
    },
    "/tables/{tableId}": {
      "get": {
        "description": "Gets table info",
        "summary": "Get all information about table",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Table"
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Empty": {
        "title": "Empty Schema",
        "type": "object"
      },
      "Reservation": {
        "type": "object",
        "properties": {
          "tableNumber": {
            "type": "integer"
          },
          "clientName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "slotTimeStart": {
            "type": "string",
            "format": "time"
          },
          "slotTimeEnd": {
            "type": "string",
            "format": "time"
          }
        }
      },
      "SignInResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          }
        }
      },
      "Table": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "number": {
            "type": "integer"
          },
          "places": {
            "type": "integer"
          },
          "isVip": {
            "type": "boolean"
          },
          "minOrder": {
            "type": "integer"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "GetReservationsResponse": {
        "type": "object",
        "properties": {
          "reservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reservation"
            }
          }
        }
      },
      "GetTablesResponse": {
        "type": "object",
        "properties": {
          "tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Table"
            }
          }
        }
      },
      "PostReservationsResponse": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "string"
          }
        }
      },
      "PostTablesResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          }
        }
      }
    },
    "securitySchemes": {
      "authorizer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "x-amazon-apigateway-authtype": "cognito_user_pools",
        "x-amazon-apigateway-authorizer": {
          "x-syndicate-cognito-userpool-names": [
            "${booking_userpool}"
          ],
          "type": "cognito_user_pools"
        }
      }
    }
  }
}